✅ Inference ONNX model saved to /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_infer.onnx
✅ Renamed ONNX model saved to /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_infer.onnx
🔹 Fixing dynamic shape...
🔹 Running symbolic shape inference...
🔹 Optimizing ONNX model for ViT...
✅ ONNX model optimization complete!

Input:
  input: [1, 3, 16, 16]

Output:
  output: [1, 10]

Node info:

Node 1: node_3_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv (type: Conv)
  Input:
    1. input: [1, 3, 16, 16]
    2. tokenizer_conv_layers_0_0_weight: [Initializer]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv__0: [1, 8, 16, 16]
  Property:
    auto_pad
    dilations
    group
    strides
    kernel_shape
    pads

Node 2: node_4_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu (type: Relu)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv__0: [1, 8, 16, 16]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu__0: [1, 8, 16, 16]

Node 3: node_5_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool (type: MaxPool)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu__0: [1, 8, 16, 16]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool__0: [1, 8, 8, 8]
  Property:
    storage_order
    auto_pad
    ceil_mode
    dilations
    kernel_shape
    pads
    strides

Node 4: node_13_tokenizer_flattener_Reshape (type: Reshape)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool__0: [1, 8, 8, 8]
    2. node_0_tokenizer_flattener_Concat__0: [Initializer]
  Output:
    1. node_0_tokenizer_flattener_Reshape__0: [1, 8, 64]
  Property:
    allowzero

Node 5: node_14_tokenizer_Transpose (type: Transpose)
  Input:
    1. node_0_tokenizer_flattener_Reshape__0: [1, 8, 64]
  Output:
    1. node_0_tokenizer_Transpose__0: [1, 64, 8]
  Property:
    perm

Node 6: node_15_classifier_Add (type: Add)
  Input:
    1. node_0_tokenizer_Transpose__0: [1, 64, 8]
    2. classifier_positional_emb: [Initializer]
  Output:
    1. node_0_classifier_Add__0: [1, 64, 8]

Node 7: node_16_classifier_blocks_0_pre_norm_ReduceMean (type: ReduceMean)
  Input:
    1. node_0_classifier_Add__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_ReduceMean__0: [1, 64, 1]
  Property:
    keepdims
    axes

Node 8: node_17_classifier_blocks_0_pre_norm_Sub (type: Sub)
  Input:
    1. node_0_classifier_Add__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_pre_norm_ReduceMean__0: [1, 64, 1]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Sub__0: [1, 64, 8]

Node 9: node_19_classifier_blocks_0_pre_norm_Pow (type: Pow)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Sub__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_pre_norm_Constant__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Pow__0: [1, 64, 8]

Node 10: node_20_classifier_blocks_0_pre_norm_ReduceMean_1 (type: ReduceMean)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Pow__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_ReduceMean_1__0: [1, 64, 1]
  Property:
    keepdims
    axes

Node 11: node_22_classifier_blocks_0_pre_norm_Add (type: Add)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_ReduceMean_1__0: [1, 64, 1]
    2. node_0_classifier_blocks_0_pre_norm_Constant_1__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Add__0: [1, 64, 1]

Node 12: node_23_classifier_blocks_0_pre_norm_Sqrt (type: Sqrt)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add__0: [1, 64, 1]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Sqrt__0: [1, 64, 1]

Node 13: node_24_classifier_blocks_0_pre_norm_Div (type: Div)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Sub__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_pre_norm_Sqrt__0: [1, 64, 1]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Div__0: [1, 64, 8]

Node 14: node_25_classifier_blocks_0_pre_norm_Mul (type: Mul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Div__0: [1, 64, 8]
    2. classifier_blocks_0_pre_norm_weight: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Mul__0: [1, 64, 8]

Node 15: node_26_classifier_blocks_0_pre_norm_Add_1 (type: Add)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Mul__0: [1, 64, 8]
    2. classifier_blocks_0_pre_norm_bias: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]

Node 16: node_63_classifier_blocks_0_self_attn_k_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_k_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_k_proj_MatMul__0: [1, 64, 8]

Node 17: node_64_classifier_blocks_0_self_attn_Reshape_1 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_k_proj_MatMul__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Concat_1__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Reshape_1__0: [1, 64, 1, 8]
  Property:
    allowzero

Node 18: node_69_classifier_blocks_0_self_attn_Transpose_2 (type: Transpose)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Reshape_1__0: [1, 64, 1, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose_2__0: [1, 1, 8, 64]
  Property:
    perm

Node 19: node_31_classifier_blocks_0_self_attn_q_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_q_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_q_proj_MatMul__0: [1, 64, 8]

Node 20: node_60_classifier_blocks_0_self_attn_Reshape (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_q_proj_MatMul__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Concat__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Reshape__0: [1, 64, 1, 8]
  Property:
    allowzero

Node 21: node_61_classifier_blocks_0_self_attn_Transpose (type: Transpose)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Reshape__0: [1, 64, 1, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose__0: [1, 1, 64, 8]
  Property:
    perm

Node 22: node_70_classifier_blocks_0_self_attn_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Transpose__0: [1, 1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Transpose_2__0: [1, 1, 8, 64]
  Output:
    1. node_0_classifier_blocks_0_self_attn_MatMul__0: [1, 1, 64, 64]

Node 23: node_72_classifier_blocks_0_self_attn_Mul (type: Mul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_MatMul__0: [1, 1, 64, 64]
    2. node_0_classifier_blocks_0_self_attn_Constant_4__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Mul__0: [1, 1, 64, 64]

Node 24: node_73_classifier_blocks_0_self_attn_Softmax (type: Softmax)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Mul__0: [1, 1, 64, 64]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Softmax__0: [1, 1, 64, 64]
  Property:
    axis

Node 25: node_66_classifier_blocks_0_self_attn_v_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_v_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_v_proj_MatMul__0: [1, 64, 8]

Node 26: node_67_classifier_blocks_0_self_attn_Reshape_2 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_v_proj_MatMul__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Concat_2__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Reshape_2__0: [1, 64, 1, 8]
  Property:
    allowzero

Node 27: node_68_classifier_blocks_0_self_attn_Transpose_1 (type: Transpose)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Reshape_2__0: [1, 64, 1, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose_1__0: [1, 1, 64, 8]
  Property:
    perm

Node 28: node_74_classifier_blocks_0_self_attn_MatMul_1 (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Softmax__0: [1, 1, 64, 64]
    2. node_0_classifier_blocks_0_self_attn_Transpose_1__0: [1, 1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_MatMul_1__0: [1, 1, 64, 8]

Node 29: node_75_classifier_blocks_0_self_attn_Transpose_3 (type: Transpose)
  Input:
    1. node_0_classifier_blocks_0_self_attn_MatMul_1__0: [1, 1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose_3__0: [1, 64, 1, 8]
  Property:
    perm

Node 30: node_83_classifier_blocks_0_self_attn_Reshape_3 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Transpose_3__0: [1, 64, 1, 8]
    2. node_0_classifier_blocks_0_self_attn_Concat_3__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Reshape_3__0: [1, 64, 8]
  Property:
    allowzero

Node 31: node_85_classifier_blocks_0_self_attn_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Reshape_3__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_proj_MatMul__0: [1, 64, 8]

Node 32: node_86_classifier_blocks_0_self_attn_proj_Add (type: Add)
  Input:
    1. classifier_blocks_0_self_attn_proj_bias: [Initializer]
    2. node_0_classifier_blocks_0_self_attn_proj_MatMul__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_proj_Add__0: [1, 64, 8]

Node 33: node_87_classifier_blocks_0_Add (type: Add)
  Input:
    1. node_0_classifier_Add__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_proj_Add__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_Add__0: [1, 64, 8]

Node 34: node_88_classifier_blocks_0_norm1_ReduceMean (type: ReduceMean)
  Input:
    1. node_0_classifier_blocks_0_Add__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_norm1_ReduceMean__0: [1, 64, 1]
  Property:
    keepdims
    axes

Node 35: node_89_classifier_blocks_0_norm1_Sub (type: Sub)
  Input:
    1. node_0_classifier_blocks_0_Add__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_norm1_ReduceMean__0: [1, 64, 1]
  Output:
    1. node_0_classifier_blocks_0_norm1_Sub__0: [1, 64, 8]

Node 36: node_91_classifier_blocks_0_norm1_Pow (type: Pow)
  Input:
    1. node_0_classifier_blocks_0_norm1_Sub__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_norm1_Constant__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_norm1_Pow__0: [1, 64, 8]

Node 37: node_92_classifier_blocks_0_norm1_ReduceMean_1 (type: ReduceMean)
  Input:
    1. node_0_classifier_blocks_0_norm1_Pow__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_norm1_ReduceMean_1__0: [1, 64, 1]
  Property:
    keepdims
    axes

Node 38: node_94_classifier_blocks_0_norm1_Add (type: Add)
  Input:
    1. node_0_classifier_blocks_0_norm1_ReduceMean_1__0: [1, 64, 1]
    2. node_0_classifier_blocks_0_norm1_Constant_1__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_norm1_Add__0: [1, 64, 1]

Node 39: node_95_classifier_blocks_0_norm1_Sqrt (type: Sqrt)
  Input:
    1. node_0_classifier_blocks_0_norm1_Add__0: [1, 64, 1]
  Output:
    1. node_0_classifier_blocks_0_norm1_Sqrt__0: [1, 64, 1]

Node 40: node_96_classifier_blocks_0_norm1_Div (type: Div)
  Input:
    1. node_0_classifier_blocks_0_norm1_Sub__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_norm1_Sqrt__0: [1, 64, 1]
  Output:
    1. node_0_classifier_blocks_0_norm1_Div__0: [1, 64, 8]

Node 41: node_97_classifier_blocks_0_norm1_Mul (type: Mul)
  Input:
    1. node_0_classifier_blocks_0_norm1_Div__0: [1, 64, 8]
    2. classifier_blocks_0_norm1_weight: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_norm1_Mul__0: [1, 64, 8]

Node 42: node_98_classifier_blocks_0_norm1_Add_1 (type: Add)
  Input:
    1. node_0_classifier_blocks_0_norm1_Mul__0: [1, 64, 8]
    2. classifier_blocks_0_norm1_bias: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]

Node 43: node_100_classifier_blocks_0_linear1_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_linear1_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_linear1_MatMul__0: [1, 64, 16]

Node 44: node_101_classifier_blocks_0_linear1_Add (type: Add)
  Input:
    1. classifier_blocks_0_linear1_bias: [Initializer]
    2. node_0_classifier_blocks_0_linear1_MatMul__0: [1, 64, 16]
  Output:
    1. node_0_classifier_blocks_0_linear1_Add__0: [1, 64, 16]

Node 45:  (type: Gelu)
  Input:
    1. node_0_classifier_blocks_0_linear1_Add__0: [1, 64, 16]
  Output:
    1. node_0_classifier_blocks_0_Mul_1__0: [1, 64, 16]

Node 46: node_111_classifier_blocks_0_linear2_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_Mul_1__0: [1, 64, 16]
    2. node_0_classifier_blocks_0_linear2_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_linear2_MatMul__0: [1, 64, 8]

Node 47: node_112_classifier_blocks_0_linear2_Add (type: Add)
  Input:
    1. classifier_blocks_0_self_attn_proj_bias: [Initializer]
    2. node_0_classifier_blocks_0_linear2_MatMul__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_linear2_Add__0: [1, 64, 8]

Node 48: node_113_classifier_blocks_0_Add_2 (type: Add)
  Input:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_linear2_Add__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_Add_2__0: [1, 64, 8]

Node 49: node_114_classifier_norm_ReduceMean (type: ReduceMean)
  Input:
    1. node_0_classifier_blocks_0_Add_2__0: [1, 64, 8]
  Output:
    1. node_0_classifier_norm_ReduceMean__0: [1, 64, 1]
  Property:
    keepdims
    axes

Node 50: node_115_classifier_norm_Sub (type: Sub)
  Input:
    1. node_0_classifier_blocks_0_Add_2__0: [1, 64, 8]
    2. node_0_classifier_norm_ReduceMean__0: [1, 64, 1]
  Output:
    1. node_0_classifier_norm_Sub__0: [1, 64, 8]

Node 51: node_117_classifier_norm_Pow (type: Pow)
  Input:
    1. node_0_classifier_norm_Sub__0: [1, 64, 8]
    2. node_0_classifier_norm_Constant__0: [Initializer]
  Output:
    1. node_0_classifier_norm_Pow__0: [1, 64, 8]

Node 52: node_118_classifier_norm_ReduceMean_1 (type: ReduceMean)
  Input:
    1. node_0_classifier_norm_Pow__0: [1, 64, 8]
  Output:
    1. node_0_classifier_norm_ReduceMean_1__0: [1, 64, 1]
  Property:
    keepdims
    axes

Node 53: node_120_classifier_norm_Add (type: Add)
  Input:
    1. node_0_classifier_norm_ReduceMean_1__0: [1, 64, 1]
    2. node_0_classifier_norm_Constant_1__0: [Initializer]
  Output:
    1. node_0_classifier_norm_Add__0: [1, 64, 1]

Node 54: node_121_classifier_norm_Sqrt (type: Sqrt)
  Input:
    1. node_0_classifier_norm_Add__0: [1, 64, 1]
  Output:
    1. node_0_classifier_norm_Sqrt__0: [1, 64, 1]

Node 55: node_122_classifier_norm_Div (type: Div)
  Input:
    1. node_0_classifier_norm_Sub__0: [1, 64, 8]
    2. node_0_classifier_norm_Sqrt__0: [1, 64, 1]
  Output:
    1. node_0_classifier_norm_Div__0: [1, 64, 8]

Node 56: node_123_classifier_norm_Mul (type: Mul)
  Input:
    1. node_0_classifier_norm_Div__0: [1, 64, 8]
    2. classifier_norm_weight: [Initializer]
  Output:
    1. node_0_classifier_norm_Mul__0: [1, 64, 8]

Node 57: node_124_classifier_norm_Add_1 (type: Add)
  Input:
    1. node_0_classifier_norm_Mul__0: [1, 64, 8]
    2. classifier_norm_bias: [Initializer]
  Output:
    1. node_0_classifier_norm_Add_1__0: [1, 64, 8]

Node 58: node_126_classifier_attention_pool_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_attention_pool_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_attention_pool_MatMul__0: [1, 64, 1]

Node 59: node_128_classifier_Softmax (type: Softmax)
  Input:
    1. node_0_classifier_attention_pool_MatMul__0: [1, 64, 1]
  Output:
    1. node_0_classifier_Softmax__0: [1, 64, 1]
  Property:
    axis

Node 60: node_129_classifier_Transpose (type: Transpose)
  Input:
    1. node_0_classifier_Softmax__0: [1, 64, 1]
  Output:
    1. node_0_classifier_Transpose__0: [1, 1, 64]
  Property:
    perm

Node 61: node_130_classifier_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_Transpose__0: [1, 1, 64]
    2. node_0_classifier_norm_Add_1__0: [1, 64, 8]
  Output:
    1. node_0_classifier_MatMul__0: [1, 1, 8]

Node 62: node_132_classifier_Squeeze (type: Squeeze)
  Input:
    1. node_0_classifier_MatMul__0: [1, 1, 8]
    2. node_0_classifier_Constant__0: [Initializer]
  Output:
    1. node_0_classifier_Squeeze__0: [1, 8]

Node 63: node_133_classifier_fc_Gemm (type: Gemm)
  Input:
    1. node_0_classifier_Squeeze__0: [1, 8]
    2. classifier_fc_weight: [Initializer]
    3. classifier_fc_bias: [Initializer]
  Output:
    1. output: [1, 10]
  Property:
    alpha
    beta
    transA
    transB
 All Parameters: ['tokenizer_conv_layers_0_0_weight', 'classifier_positional_emb', 'node_0_classifier_blocks_0_self_attn_proj_Transpose__0', 'node_0_classifier_Constant__0', 'classifier_blocks_0_pre_norm_weight', 'classifier_blocks_0_pre_norm_bias', 'node_0_tokenizer_flattener_Concat__0', 'node_0_classifier_blocks_0_linear1_Transpose__0', 'node_0_classifier_attention_pool_Transpose__0', 'node_0_classifier_blocks_0_self_attn_k_proj_Transpose__0', 'classifier_blocks_0_self_attn_proj_bias', 'classifier_blocks_0_linear1_bias', 'classifier_blocks_0_norm1_weight', 'classifier_blocks_0_norm1_bias', 'node_0_classifier_norm_Constant__0', 'classifier_norm_weight', 'classifier_norm_bias', 'classifier_fc_weight', 'classifier_fc_bias', 'node_0_classifier_blocks_0_self_attn_Concat_2__0', 'node_0_classifier_blocks_0_self_attn_Concat__0', 'node_0_classifier_blocks_0_self_attn_Constant_4__0', 'node_0_classifier_blocks_0_linear2_Transpose__0', 'node_0_classifier_blocks_0_self_attn_Concat_3__0', 'node_0_classifier_blocks_0_pre_norm_Constant__0', 'node_0_classifier_blocks_0_pre_norm_Constant_1__0', 'node_0_classifier_blocks_0_self_attn_v_proj_Transpose__0', 'node_0_classifier_blocks_0_self_attn_q_proj_Transpose__0', 'node_0_classifier_blocks_0_norm1_Constant_1__0', 'node_0_classifier_blocks_0_norm1_Constant__0', 'node_0_classifier_blocks_0_self_attn_Concat_1__0', 'node_0_classifier_norm_Constant_1__0']
🔹 Training Only: ['classifier_fc_weight']
🔹 Frozen Parameters: ['tokenizer_conv_layers_0_0_weight', 'classifier_positional_emb', 'node_0_classifier_blocks_0_self_attn_proj_Transpose__0', 'node_0_classifier_Constant__0', 'classifier_blocks_0_pre_norm_weight', 'classifier_blocks_0_pre_norm_bias', 'node_0_tokenizer_flattener_Concat__0', 'node_0_classifier_blocks_0_linear1_Transpose__0', 'node_0_classifier_attention_pool_Transpose__0', 'node_0_classifier_blocks_0_self_attn_k_proj_Transpose__0', 'classifier_blocks_0_self_attn_proj_bias', 'classifier_blocks_0_linear1_bias', 'classifier_blocks_0_norm1_weight', 'classifier_blocks_0_norm1_bias', 'node_0_classifier_norm_Constant__0', 'classifier_norm_weight', 'classifier_norm_bias', 'classifier_fc_bias', 'node_0_classifier_blocks_0_self_attn_Concat_2__0', 'node_0_classifier_blocks_0_self_attn_Concat__0', 'node_0_classifier_blocks_0_self_attn_Constant_4__0', 'node_0_classifier_blocks_0_linear2_Transpose__0', 'node_0_classifier_blocks_0_self_attn_Concat_3__0', 'node_0_classifier_blocks_0_pre_norm_Constant__0', 'node_0_classifier_blocks_0_pre_norm_Constant_1__0', 'node_0_classifier_blocks_0_self_attn_v_proj_Transpose__0', 'node_0_classifier_blocks_0_self_attn_q_proj_Transpose__0', 'node_0_classifier_blocks_0_norm1_Constant_1__0', 'node_0_classifier_blocks_0_norm1_Constant__0', 'node_0_classifier_blocks_0_self_attn_Concat_1__0', 'node_0_classifier_norm_Constant_1__0']
✅ Final Training ONNX model saved as /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train.onnx
🔹 Running optimization for /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train_optim.onnx...
🔄 Replacing BiasGeluFusion: BiasGelu
⚠️ Found 1 Microsoft custom operators that might affect shape inference
✅ Partial shape inference completed for non-Microsoft operators
✅ Successfully replaced 1 BiasGelu nodes with Add + GELU.
✅ Successfully removed BiasGeluFusion. Saved as /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train_optim.onnx
Current Opset: 15, Target opset: 13
Fixed 3 LayerNormalization for 13
Warning:Not Verified Field 'shape' of 'type' is required but missing.
Saved /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train_optim.onnx
✅ Successfully fixed LayerNormalization opset version. Saved as /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train_optim.onnx
Loading model: /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train_optim.onnx
Found fusible Reshape pair: node_60_classifier_blocks_0_self_attn_Reshape -> Transpose_Reshape_token_5
Found fusible Reshape pair: node_67_classifier_blocks_0_self_attn_Reshape_2 -> Transpose_Reshape
Found fusible Reshape pair: Transpose_Reshape_token_7 -> node_83_classifier_blocks_0_self_attn_Reshape_3
Found 1 Microsoft custom nodes. These will be preserved.
Original model node count: 42
Optimized model node count: 39
Removed Reshape nodes: 3
Optimized model saved to: /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train_optim.onnx
✅ Successfully optimized Reshape nodes. Saved as /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx
Find 4 Layernorm or Maxpool
Saved to: /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train_optim.onnx
✅ Successfully removed all second outputs from Layernorm and Maxpool nodes. Saved as /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx
Modified 1 Squeeze
Saved to /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network_train_optim.onnx
✅ Successfully converted Squeeze inputs to attributes. Saved as /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx
Find Gemm without C: node_133_classifier_fc_Gemm_Grad/Gemm_0
Add C: node_133_classifier_fc_Gemm_Grad/Gemm_0_c_bias, Shape: [8]
Saved to: /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx
✅ Successfully added C to Gemm nodes. Saved as /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx
Saved to /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx
Removed 0  Identity or ReduceSum
✅ Successfully removed Identity and ReduceSum nodes. Saved as /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx

Input:
  input: [1, 3, 16, 16]
  labels: [1]

Output:
  onnx::loss::2: []
  classifier_fc_weight_grad: []

Node info:

Node 1: node_3_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv (type: Conv)
  Input:
    1. input: [1, 3, 16, 16]
    2. tokenizer_conv_layers_0_0_weight: [Initializer]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv__0: [1, 8, 16, 16]
  Property:
    auto_pad
    dilations
    group
    kernel_shape
    strides
    pads

Node 2: node_4_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu (type: Relu)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv__0: [1, 8, 16, 16]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu__0: [1, 8, 16, 16]

Node 3: node_5_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool (type: MaxPool)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu__0: [1, 8, 16, 16]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool__0: [1, 8, 8, 8]
  Property:
    storage_order
    strides
    auto_pad
    dilations
    ceil_mode
    kernel_shape
    pads

Node 4: node_13_tokenizer_flattener_Reshape (type: Reshape)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool__0: [1, 8, 8, 8]
    2. node_0_tokenizer_flattener_Concat__0: [Initializer]
  Output:
    1. node_0_tokenizer_flattener_Reshape__0: [1, 8, 64]
  Property:
    allowzero

Node 5: node_14_tokenizer_Transpose (type: Transpose)
  Input:
    1. node_0_tokenizer_flattener_Reshape__0: [1, 8, 64]
  Output:
    1. node_0_tokenizer_Transpose__0: [1, 64, 8]
  Property:
    perm

Node 6: node_15_classifier_Add (type: Add)
  Input:
    1. node_0_tokenizer_Transpose__0: [1, 64, 8]
    2. classifier_positional_emb: [Initializer]
  Output:
    1. node_0_classifier_Add__0: [1, 64, 8]

Node 7: node_25_classifier_blocks_0_pre_norm_Mul/LayerNormFusion/ (type: LayerNormalization)
  Input:
    1. node_0_classifier_Add__0: [1, 64, 8]
    2. classifier_blocks_0_pre_norm_weight: [Initializer]
    3. classifier_blocks_0_pre_norm_bias: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
  Property:
    epsilon
    axis

Node 8: node_63_classifier_blocks_0_self_attn_k_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_k_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_k_proj_MatMul__0: [1, 64, 8]

Node 9: node_64_classifier_blocks_0_self_attn_Reshape_1 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_k_proj_MatMul__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Concat_1__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Reshape_1__0: [1, 64, 1, 8]
  Property:
    allowzero

Node 10: node_69_classifier_blocks_0_self_attn_Transpose_2 (type: Transpose)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Reshape_1__0: [1, 64, 1, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose_2__0: [1, 1, 8, 64]
  Property:
    perm

Node 11: node_31_classifier_blocks_0_self_attn_q_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_q_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_q_proj_MatMul__0: [1, 64, 8]

Node 12: Transpose_Reshape_token_5 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_q_proj_MatMul__0: [1, 64, 8]
    2. transpose_reshape_shape_token_4: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose__0: [1, 1, 64, 8]
  Property:
    allowzero

Node 13: node_70_classifier_blocks_0_self_attn_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Transpose__0: [1, 1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Transpose_2__0: [1, 1, 8, 64]
  Output:
    1. node_0_classifier_blocks_0_self_attn_MatMul__0: [1, 1, 64, 64]

Node 14: node_72_classifier_blocks_0_self_attn_Mul (type: Mul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_MatMul__0: [1, 1, 64, 64]
    2. node_0_classifier_blocks_0_self_attn_Constant_4__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Mul__0: [1, 1, 64, 64]

Node 15: node_73_classifier_blocks_0_self_attn_Softmax (type: Softmax)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Mul__0: [1, 1, 64, 64]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Softmax__0: [1, 1, 64, 64]
  Property:
    axis

Node 16: node_66_classifier_blocks_0_self_attn_v_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_v_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_v_proj_MatMul__0: [1, 64, 8]

Node 17: Transpose_Reshape (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_v_proj_MatMul__0: [1, 64, 8]
    2. transpose_reshape_shape: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose_1__0: [1, 1, 64, 8]
  Property:
    allowzero

Node 18: node_74_classifier_blocks_0_self_attn_MatMul_1 (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Softmax__0: [1, 1, 64, 64]
    2. node_0_classifier_blocks_0_self_attn_Transpose_1__0: [1, 1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_MatMul_1__0: [1, 1, 64, 8]

Node 19: node_83_classifier_blocks_0_self_attn_Reshape_3 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_MatMul_1__0: [1, 1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Concat_3__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Reshape_3__0: [1, 64, 8]
  Property:
    allowzero

Node 20: node_85_classifier_blocks_0_self_attn_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Reshape_3__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_proj_MatMul__0: [1, 64, 8]

Node 21: node_86_classifier_blocks_0_self_attn_proj_Add (type: Add)
  Input:
    1. classifier_blocks_0_self_attn_proj_bias: [Initializer]
    2. node_0_classifier_blocks_0_self_attn_proj_MatMul__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_proj_Add__0: [1, 64, 8]

Node 22: node_87_classifier_blocks_0_Add (type: Add)
  Input:
    1. node_0_classifier_Add__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_proj_Add__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_Add__0: [1, 64, 8]

Node 23: node_97_classifier_blocks_0_norm1_Mul/LayerNormFusion/ (type: LayerNormalization)
  Input:
    1. node_0_classifier_blocks_0_Add__0: [1, 64, 8]
    2. classifier_blocks_0_norm1_weight: [Initializer]
    3. classifier_blocks_0_norm1_bias: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]
  Property:
    epsilon
    axis

Node 24: node_100_classifier_blocks_0_linear1_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_linear1_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_linear1_MatMul__0: [1, 64, 16]

Node 25: BiasGelu_Add (type: Add)
  Input:
    1. node_0_classifier_blocks_0_linear1_MatMul__0: [1, 64, 16]
    2. classifier_blocks_0_linear1_bias: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_linear1_MatMul__0_add_bias: [1, 64, 16]

Node 26: BiasGelu_Gelu (type: Gelu)
  Input:
    1. node_0_classifier_blocks_0_linear1_MatMul__0_add_bias: [1, 64, 16]
  Output:
    1. node_0_classifier_blocks_0_Mul_1__0: [1, 64, 16]

Node 27: node_111_classifier_blocks_0_linear2_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_Mul_1__0: [1, 64, 16]
    2. node_0_classifier_blocks_0_linear2_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_linear2_MatMul__0: [1, 64, 8]

Node 28: node_112_classifier_blocks_0_linear2_Add (type: Add)
  Input:
    1. classifier_blocks_0_self_attn_proj_bias: [Initializer]
    2. node_0_classifier_blocks_0_linear2_MatMul__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_linear2_Add__0: [1, 64, 8]

Node 29: node_113_classifier_blocks_0_Add_2 (type: Add)
  Input:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_linear2_Add__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_Add_2__0: [1, 64, 8]

Node 30: node_123_classifier_norm_Mul/LayerNormFusion/ (type: LayerNormalization)
  Input:
    1. node_0_classifier_blocks_0_Add_2__0: [1, 64, 8]
    2. classifier_norm_weight: [Initializer]
    3. classifier_norm_bias: [Initializer]
  Output:
    1. node_0_classifier_norm_Add_1__0: [1, 64, 8]
  Property:
    epsilon
    axis

Node 31: node_126_classifier_attention_pool_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_attention_pool_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_attention_pool_MatMul__0: [1, 64, 1]

Node 32: node_128_classifier_Softmax (type: Softmax)
  Input:
    1. node_0_classifier_attention_pool_MatMul__0: [1, 64, 1]
  Output:
    1. node_0_classifier_Softmax__0: [1, 64, 1]
  Property:
    axis

Node 33: Transpose_Reshape_token_9 (type: Reshape)
  Input:
    1. node_0_classifier_Softmax__0: [1, 64, 1]
    2. transpose_reshape_shape_token_8: [Initializer]
  Output:
    1. node_0_classifier_Transpose__0: [1, 1, 64]
  Property:
    allowzero

Node 34: node_130_classifier_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_Transpose__0: [1, 1, 64]
    2. node_0_classifier_norm_Add_1__0: [1, 64, 8]
  Output:
    1. node_0_classifier_MatMul__0: [1, 1, 8]

Node 35: node_132_classifier_Squeeze (type: Squeeze)
  Input:
    1. node_0_classifier_MatMul__0: [1, 1, 8]
  Output:
    1. node_0_classifier_Squeeze__0: [1, 8]
  Property:
    axes

Node 36: node_133_classifier_fc_Gemm (type: Gemm)
  Input:
    1. node_0_classifier_Squeeze__0: [1, 8]
    2. classifier_fc_weight: [Initializer]
    3. classifier_fc_bias: [Initializer]
  Output:
    1. output: [1, 10]
  Property:
    alpha
    beta
    transA
    transB

Node 37: onnx::SoftmaxCrossEntropyLoss::4 (type: SoftmaxCrossEntropyLoss)
  Input:
    1. output: [1, 10]
    2. labels: [1]
  Output:
    1. onnx::loss::2: []
    2. onnx::log_prob::3: [1, 10]
  Property:
    reduction

Node 38: onnx::SoftmaxCrossEntropyLoss::4_Grad/SoftmaxCrossEntropyLossGrad_0 (type: SoftmaxCrossEntropyLossGrad)
  Input:
    1. onnx::loss::2_grad: [Initializer]
    2. onnx::log_prob::3: [1, 10]
    3. labels: [1]
  Output:
    1. output_grad: [1, 10]
  Property:
    reduction

Node 39: node_133_classifier_fc_Gemm_Grad/Gemm_0 (type: Gemm)
  Input:
    1. output_grad: [1, 10]
    2. node_0_classifier_Squeeze__0: [1, 8]
    3. node_133_classifier_fc_Gemm_Grad/Gemm_0_c_bias: [Initializer]
  Output:
    1. classifier_fc_weight_grad: []
  Property:
    transB
    alpha
    transA
    beta
发现Microsoft自定义算子: []
形状推断过程中遇到错误: cannot import name '_bring_proto' from 'onnx.shape_inference' (/usr/local/lib/python3.10/dist-packages/onnx/shape_inference.py)
尝试针对每个节点单独进行形状推断...
节点 0: Conv 形状推断成功
节点 1: Relu 形状推断成功
节点 2: MaxPool 形状推断成功
节点 3: Reshape 形状推断成功
节点 4: Transpose 形状推断成功
节点 5: Add 形状推断成功
节点 6: LayerNormalization 形状推断成功
节点 7: MatMul 形状推断成功
节点 8: Reshape 形状推断成功
节点 9: Transpose 形状推断成功
节点 10: MatMul 形状推断成功
节点 11: Reshape 形状推断成功
节点 12: MatMul 形状推断成功
节点 13: Mul 形状推断成功
节点 14: Softmax 形状推断成功
节点 15: MatMul 形状推断成功
节点 16: Reshape 形状推断成功
节点 17: MatMul 形状推断成功
节点 18: Reshape 形状推断成功
节点 19: MatMul 形状推断成功
节点 20: Add 形状推断成功
节点 21: Add 形状推断成功
节点 22: LayerNormalization 形状推断成功
节点 23: MatMul 形状推断成功
节点 24: Add 形状推断成功
节点 25: Gelu 形状推断成功
节点 26: MatMul 形状推断成功
节点 27: Add 形状推断成功
节点 28: Add 形状推断成功
节点 29: LayerNormalization 形状推断成功
节点 30: MatMul 形状推断成功
节点 31: Softmax 形状推断成功
节点 32: Reshape 形状推断成功
节点 33: MatMul 形状推断成功
节点 34: Squeeze 形状推断失败: [ShapeInferenceError] (op_type:Squeeze, node name: node_132_classifier_Squeeze): [ShapeInferenceError] Inferred shape and existing shape differ in rank: (1) vs (2)
节点 35: Gemm 形状推断成功
节点 36: SoftmaxCrossEntropyLoss 形状推断成功
节点 37: SoftmaxCrossEntropyLossGrad 形状推断失败: [TypeInferenceError] Cannot infer type and shape for node name onnx::SoftmaxCrossEntropyLoss::4_Grad/SoftmaxCrossEntropyLossGrad_0. No opset import for domaincom.microsoft optype SoftmaxCrossEntropyLossGrad
节点 38: Gemm 形状推断成功
带有形状信息的模型已保存到: /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx

Input:
  input: [1, 3, 16, 16]
  labels: [1]

Output:
  onnx__loss__2: []
  classifier_fc_weight_grad: [10, 8]

Node info:

Node 1: node_3_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv (type: Conv)
  Input:
    1. input: [1, 3, 16, 16]
    2. tokenizer_conv_layers_0_0_weight: [Initializer]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv__0: [1, 8, 16, 16]
  Property:
    auto_pad
    dilations
    group
    kernel_shape
    strides
    pads

Node 2: node_4_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu (type: Relu)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_0_Conv__0: [1, 8, 16, 16]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu__0: [1, 8, 16, 16]

Node 3: node_5_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool (type: MaxPool)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_1_Relu__0: [1, 8, 16, 16]
  Output:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool__0: [1, 8, 8, 8]
  Property:
    storage_order
    strides
    auto_pad
    dilations
    ceil_mode
    kernel_shape
    pads

Node 4: node_13_tokenizer_flattener_Reshape (type: Reshape)
  Input:
    1. node_0_tokenizer_conv_layers_conv_layers_0_conv_layers_0_2_MaxPool__0: [1, 8, 8, 8]
    2. node_0_tokenizer_flattener_Concat__0: [Initializer]
  Output:
    1. node_0_tokenizer_flattener_Reshape__0: [1, 8, 64]
  Property:
    allowzero

Node 5: node_14_tokenizer_Transpose (type: Transpose)
  Input:
    1. node_0_tokenizer_flattener_Reshape__0: [1, 8, 64]
  Output:
    1. node_0_tokenizer_Transpose__0: [1, 64, 8]
  Property:
    perm

Node 6: node_15_classifier_Add (type: Add)
  Input:
    1. node_0_tokenizer_Transpose__0: [1, 64, 8]
    2. classifier_positional_emb: [Initializer]
  Output:
    1. node_0_classifier_Add__0: [1, 64, 8]

Node 7: node_25_classifier_blocks_0_pre_norm_Mul_LayerNormFusion_ (type: LayerNormalization)
  Input:
    1. node_0_classifier_Add__0: [1, 64, 8]
    2. classifier_blocks_0_pre_norm_weight: [Initializer]
    3. classifier_blocks_0_pre_norm_bias: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
  Property:
    epsilon
    axis

Node 8: node_63_classifier_blocks_0_self_attn_k_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_k_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_k_proj_MatMul__0: [1, 64, 8]

Node 9: node_64_classifier_blocks_0_self_attn_Reshape_1 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_k_proj_MatMul__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Concat_1__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Reshape_1__0: [1, 64, 1, 8]
  Property:
    allowzero

Node 10: node_69_classifier_blocks_0_self_attn_Transpose_2 (type: Transpose)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Reshape_1__0: [1, 64, 1, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose_2__0: [1, 1, 8, 64]
  Property:
    perm

Node 11: node_31_classifier_blocks_0_self_attn_q_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_q_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_q_proj_MatMul__0: [1, 64, 8]

Node 12: Transpose_Reshape_token_5 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_q_proj_MatMul__0: [1, 64, 8]
    2. transpose_reshape_shape_token_4: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose__0: [1, 1, 64, 8]
  Property:
    allowzero

Node 13: node_70_classifier_blocks_0_self_attn_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Transpose__0: [1, 1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Transpose_2__0: [1, 1, 8, 64]
  Output:
    1. node_0_classifier_blocks_0_self_attn_MatMul__0: [1, 1, 64, 64]

Node 14: node_72_classifier_blocks_0_self_attn_Mul (type: Mul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_MatMul__0: [1, 1, 64, 64]
    2. node_0_classifier_blocks_0_self_attn_Constant_4__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Mul__0: [1, 1, 64, 64]

Node 15: node_73_classifier_blocks_0_self_attn_Softmax (type: Softmax)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Mul__0: [1, 1, 64, 64]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Softmax__0: [1, 1, 64, 64]
  Property:
    axis

Node 16: node_66_classifier_blocks_0_self_attn_v_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_pre_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_v_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_v_proj_MatMul__0: [1, 64, 8]

Node 17: Transpose_Reshape (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_v_proj_MatMul__0: [1, 64, 8]
    2. transpose_reshape_shape: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Transpose_1__0: [1, 1, 64, 8]
  Property:
    allowzero

Node 18: node_74_classifier_blocks_0_self_attn_MatMul_1 (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Softmax__0: [1, 1, 64, 64]
    2. node_0_classifier_blocks_0_self_attn_Transpose_1__0: [1, 1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_MatMul_1__0: [1, 1, 64, 8]

Node 19: node_83_classifier_blocks_0_self_attn_Reshape_3 (type: Reshape)
  Input:
    1. node_0_classifier_blocks_0_self_attn_MatMul_1__0: [1, 1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_Concat_3__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_Reshape_3__0: [1, 64, 8]
  Property:
    allowzero

Node 20: node_85_classifier_blocks_0_self_attn_proj_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_self_attn_Reshape_3__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_proj_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_self_attn_proj_MatMul__0: [1, 64, 8]

Node 21: node_86_classifier_blocks_0_self_attn_proj_Add (type: Add)
  Input:
    1. classifier_blocks_0_self_attn_proj_bias: [Initializer]
    2. node_0_classifier_blocks_0_self_attn_proj_MatMul__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_self_attn_proj_Add__0: [1, 64, 8]

Node 22: node_87_classifier_blocks_0_Add (type: Add)
  Input:
    1. node_0_classifier_Add__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_self_attn_proj_Add__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_Add__0: [1, 64, 8]

Node 23: node_97_classifier_blocks_0_norm1_Mul_LayerNormFusion_ (type: LayerNormalization)
  Input:
    1. node_0_classifier_blocks_0_Add__0: [1, 64, 8]
    2. classifier_blocks_0_norm1_weight: [Initializer]
    3. classifier_blocks_0_norm1_bias: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]
  Property:
    epsilon
    axis

Node 24: node_100_classifier_blocks_0_linear1_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_linear1_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_linear1_MatMul__0: [1, 64, 16]

Node 25: BiasGelu_Add (type: Add)
  Input:
    1. node_0_classifier_blocks_0_linear1_MatMul__0: [1, 64, 16]
    2. classifier_blocks_0_linear1_bias: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_linear1_MatMul__0_add_bias: [1, 64, 16]

Node 26: BiasGelu_Gelu (type: Gelu)
  Input:
    1. node_0_classifier_blocks_0_linear1_MatMul__0_add_bias: [1, 64, 16]
  Output:
    1. node_0_classifier_blocks_0_Mul_1__0: [1, 64, 16]

Node 27: node_111_classifier_blocks_0_linear2_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_blocks_0_Mul_1__0: [1, 64, 16]
    2. node_0_classifier_blocks_0_linear2_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_blocks_0_linear2_MatMul__0: [1, 64, 8]

Node 28: node_112_classifier_blocks_0_linear2_Add (type: Add)
  Input:
    1. classifier_blocks_0_self_attn_proj_bias: [Initializer]
    2. node_0_classifier_blocks_0_linear2_MatMul__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_linear2_Add__0: [1, 64, 8]

Node 29: node_113_classifier_blocks_0_Add_2 (type: Add)
  Input:
    1. node_0_classifier_blocks_0_norm1_Add_1__0: [1, 64, 8]
    2. node_0_classifier_blocks_0_linear2_Add__0: [1, 64, 8]
  Output:
    1. node_0_classifier_blocks_0_Add_2__0: [1, 64, 8]

Node 30: node_123_classifier_norm_Mul_LayerNormFusion_ (type: LayerNormalization)
  Input:
    1. node_0_classifier_blocks_0_Add_2__0: [1, 64, 8]
    2. classifier_norm_weight: [Initializer]
    3. classifier_norm_bias: [Initializer]
  Output:
    1. node_0_classifier_norm_Add_1__0: [1, 64, 8]
  Property:
    epsilon
    axis

Node 31: node_126_classifier_attention_pool_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_norm_Add_1__0: [1, 64, 8]
    2. node_0_classifier_attention_pool_Transpose__0: [Initializer]
  Output:
    1. node_0_classifier_attention_pool_MatMul__0: [1, 64, 1]

Node 32: node_128_classifier_Softmax (type: Softmax)
  Input:
    1. node_0_classifier_attention_pool_MatMul__0: [1, 64, 1]
  Output:
    1. node_0_classifier_Softmax__0: [1, 64, 1]
  Property:
    axis

Node 33: Transpose_Reshape_token_9 (type: Reshape)
  Input:
    1. node_0_classifier_Softmax__0: [1, 64, 1]
    2. transpose_reshape_shape_token_8: [Initializer]
  Output:
    1. node_0_classifier_Transpose__0: [1, 1, 64]
  Property:
    allowzero

Node 34: node_130_classifier_MatMul (type: MatMul)
  Input:
    1. node_0_classifier_Transpose__0: [1, 1, 64]
    2. node_0_classifier_norm_Add_1__0: [1, 64, 8]
  Output:
    1. node_0_classifier_MatMul__0: [1, 1, 8]

Node 35: node_132_classifier_Squeeze (type: Squeeze)
  Input:
    1. node_0_classifier_MatMul__0: [1, 1, 8]
  Output:
    1. node_0_classifier_Squeeze__0: [1, 8]
  Property:
    axes

Node 36: node_133_classifier_fc_Gemm (type: Gemm)
  Input:
    1. node_0_classifier_Squeeze__0: [1, 8]
    2. classifier_fc_weight: [Initializer]
    3. classifier_fc_bias: [Initializer]
  Output:
    1. output: [1, 10]
  Property:
    alpha
    beta
    transA
    transB

Node 37: onnx__SoftmaxCrossEntropyLoss__4 (type: SoftmaxCrossEntropyLoss)
  Input:
    1. output: [1, 10]
    2. labels: [1]
  Output:
    1. onnx__loss__2: []
    2. onnx__log_prob__3: [1, 10]
  Property:
    reduction

Node 38: onnx__SoftmaxCrossEntropyLoss__4_Grad_SoftmaxCrossEntropyLossGrad_0 (type: SoftmaxCrossEntropyLossGrad)
  Input:
    1. onnx__loss__2_grad: [Initializer]
    2. onnx__log_prob__3: [1, 10]
    3. labels: [1]
  Output:
    1. output_grad: [1, 10]
  Property:
    reduction

Node 39: node_133_classifier_fc_Gemm_Grad_Gemm_0 (type: Gemm)
  Input:
    1. output_grad: [1, 10]
    2. node_0_classifier_Squeeze__0: [1, 8]
    3. node_133_classifier_fc_Gemm_Grad_Gemm_0_c_bias: [Initializer]
  Output:
    1. classifier_fc_weight_grad: [10, 8]
  Property:
    transB
    alpha
    transA
    beta
✅ Training ONNX model saved to /app/Onnx4Deeploy/Tests/Models/CCT/onnx/CCT_train_16_8_1_1/network.onnx
